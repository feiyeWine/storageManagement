<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yin.dao.InterGoodsMapper" >
  <resultMap id="BaseResultMap" type="com.yin.model.InterGoods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="good_id" property="goodId" jdbcType="VARCHAR" />
    <result column="good_name" property="goodName" jdbcType="VARCHAR" />
    <result column="good_type" property="goodType" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="intime" property="intime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, good_id, good_name, good_type, amount, price, description, intime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from inter_goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from inter_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yin.model.InterGoods" >
    insert into inter_goods (id, good_id, good_name, 
      good_type, amount, price, 
      description, intime)
    values (#{id,jdbcType=INTEGER}, #{goodId,jdbcType=VARCHAR}, #{goodName,jdbcType=VARCHAR}, 
      #{goodType,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, 
      #{description,jdbcType=VARCHAR}, #{intime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yin.model.InterGoods" >
    insert into inter_goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="goodId != null" >
        good_id,
      </if>
      <if test="goodName != null" >
        good_name,
      </if>
      <if test="goodType != null" >
        good_type,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="intime != null" >
        intime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodId != null" >
        #{goodId,jdbcType=VARCHAR},
      </if>
      <if test="goodName != null" >
        #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="goodType != null" >
        #{goodType,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="intime != null" >
        #{intime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yin.model.InterGoods" >
    update inter_goods
    <set >
      <if test="goodId != null" >
        good_id = #{goodId,jdbcType=VARCHAR},
      </if>
      <if test="goodName != null" >
        good_name = #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="goodType != null" >
        good_type = #{goodType,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="intime != null" >
        intime = #{intime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yin.model.InterGoods" >
    update inter_goods
    set good_id = #{goodId,jdbcType=VARCHAR},
      good_name = #{goodName,jdbcType=VARCHAR},
      good_type = #{goodType,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      description = #{description,jdbcType=VARCHAR},
      intime = #{intime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--自己写mapper-->
  <select id="findStorage" resultMap="BaseResultMap">
    SELECT * FROM inter_goods WHERE good_id IS  NOT NULL
  </select>

  <select id="getStorage" resultMap="BaseResultMap">
    SELECT * FROM inter_goods WHERE amount>0
  </select>
  <!--警报管理-->
  <select id="warning" resultMap="BaseResultMap">
    <![CDATA[
        SELECT *
        FROM
        (SELECT
            good_id,
            good_name,
            good_type,
            price,
            description,
            SUM(amount) as amount
        FROM
            inter_goods
        GROUP BY
            inter_goods.good_id,
            inter_goods.good_name,
            good_type,
            price,
            description
        )as t
        WHERE t.amount<2
]]>
  </select>

  <select id="storageCheck" resultMap="BaseResultMap">
    SELECT * FROM inter_goods WHERE amount>=0
  </select>
</mapper>